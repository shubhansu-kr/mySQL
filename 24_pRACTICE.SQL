CREATE TABLE EMP1
(
    E_ID NUMERIC(21) PRIMARY KEY,
    E_NAME VARCHAR(26) NOT NULL,
    D_ID NUMERIC(20),
    JOB VARCHAR(21),
    EMAIL VARCHAR(21),
    M_NO NUMERIC(10),
    J_DATE DATE,
    SALARY NUMERIC(21),
    MGR_ID NUMERIC(21)
);

INSERT INTO EMP1
VALUES
    (1, 'AVI', 1, 'TEACHER', 'ABC@GMAIL.COM', 3242313433, '2016-10-21', 43000, 10);
INSERT INTO EMP1
VALUES
    (2, 'GHR', 2, 'TEACHER', 'EFSC@GMAIL.COM', 5464343244, '2017-11-11', 53000, 1);
INSERT INTO EMP1
VALUES
    (3, 'SDE', 3, 'TEACHER', 'TGDDF@GMAIL.COM', 4354656566, '2006-09-10', 63000, 1);
INSERT INTO EMP1
VALUES
    (4, 'FED', 1, 'AO', 'FDSAC@GMAIL.COM', 4589707655, '2012-08-15', 67000, 2);
INSERT INTO EMP1
VALUES
    (5, 'RHU', 2, 'AO', 'BSVDF@GMAIL.COM', 3423345667, '2004-04-29', 35000, 2);
INSERT INTO EMP1
VALUES
    (6, 'IKO', 3, 'AO', 'GBSF@GMAIL.COM', 0989878786, '2022-03-26', 76000, 3);
INSERT INTO EMP1
VALUES
    (7, 'LUY', 1, 'CLERK', 'EFADF@GMAIL.COM', 1234123445, '2009-05-22', 49000, 3);
INSERT INTO EMP1
VALUES
    (8, 'YHN', 2, 'CLERK', 'YJFGF@GMAIL.COM', 4534453445, '2002-06-02', 23000, 2);
INSERT INTO EMP1
VALUES
    (9, 'EFB', 3, 'CLERK', 'FDSRG@GMAIL.COM', 5434234534, '2019-01-23', 48000, 1);
INSERT INTO EMP1
VALUES
    (10, 'OKI', 1, 'HOD', 'HYJY@GMAIL.COM', 6778677867, '2022-09-17', 93000, 10);

CREATE TABLE EMP2
(
    E_NAME VARCHAR(21),
    CITY VARCHAR(21)
);

INSERT INTO EMP2
VALUES
    ('ASDF', 'A');
INSERT INTO EMP2
VALUES
    ('WERT', 'B');
INSERT INTO EMP2
VALUES
    ('HJBN', 'C');
INSERT INTO EMP2
VALUES
    ('IYJH', 'A');
INSERT INTO EMP2
VALUES
    ('DFSE', 'B');
INSERT INTO EMP2
VALUES
    ('SDAE', 'C');
INSERT INTO EMP2
VALUES
    ('POIK', 'D');
INSERT INTO EMP2
VALUES
    ('LKOI', 'A');
INSERT INTO EMP2
VALUES
    ('IKOL', 'I');
INSERT INTO EMP2
VALUES
    ('IJUR', 'I');


-- to GET OUPUT IN A SPECIFIC STRING FORMAT: sTRING CONCATINATION
-- SYNTAX: 
-- SELECT E_NAME || 'LIVES IN' || CITY FROM EMP2;

SELECT CONCAT(E_NAME, ' LIVES IN ', CITY)
FROM EMP2;

CREATE TABLE COMPANY
(
    C_NAME VARCHAR(21),
    CITY VARCHAR(21)
);

INSERT INTO COMPANY
VALUES
    ('AMAZON', 'A');
INSERT INTO COMPANY
VALUES
    ('GOOGLE', 'C');
INSERT INTO COMPANY
VALUES
    ('META', 'A');
INSERT INTO COMPANY
VALUES
    ('NETFLIX', 'C');
INSERT INTO COMPANY
VALUES
    ('MICRO', 'B');
INSERT INTO COMPANY
VALUES
    ('APPLE', 'B');

CREATE TABLE WORKS_FOR
(
    E_NAME VARCHAR(21),
    C_NAME VARCHAR(21),
    SALARY NUMERIC(10)
);

INSERT INTO WORKS_FOR
VALUES
    ('ASDF', 'AMAZON', 4500000);
INSERT INTO WORKS_FOR
VALUES
    ('WERT', 'GOOGLE', 3500000);
INSERT INTO WORKS_FOR
VALUES
    ('HJBN', 'APPLE', 5500000);
INSERT INTO WORKS_FOR
VALUES
    ('IYJH', 'MICRO', 6500000);
INSERT INTO WORKS_FOR
VALUES
    ('DFSE', 'NETFLIX', 2500000);
INSERT INTO WORKS_FOR
VALUES
    ('SDAE', 'APPLE', 6500000);
INSERT INTO WORKS_FOR
VALUES
    ('POIK', 'MICRO', 6500000);
INSERT INTO WORKS_FOR
VALUES
    ('LKOI', 'META', 8500000);
INSERT INTO WORKS_FOR
VALUES
    ('IKOL', 'META', 2500000);
INSERT INTO WORKS_FOR
VALUES
    ('IJUR', 'GOOGLE', 5500000);

CREATE TABLE MANAGES
(
    E_NAME VARCHAR(21),
    MGR_NAME VARCHAR(21)
);

INSERT INTO MANAGES
VALUES
    ('ASDF', 'ASDF');
INSERT INTO MANAGES
VALUES
    ('WERT', 'ASDF');
INSERT INTO MANAGES
VALUES
    ('HJBN', 'WERT');
INSERT INTO MANAGES
VALUES
    ('IYJH', 'WERT');
INSERT INTO MANAGES
VALUES
    ('DFSE', 'HJBN');
INSERT INTO MANAGES
VALUES
    ('SDAE', 'HJBN');
INSERT INTO MANAGES
VALUES
    ('POIK', 'SDAE');
INSERT INTO MANAGES
VALUES
    ('LKOI', 'SDAE');
INSERT INTO MANAGES
VALUES
    ('IKOL', 'SDAE');
INSERT INTO MANAGES
VALUES
    ('IJUR', 'IKOL');

-- qUERIES 

-- SHOW ME THE NAME AND SALARY OF ALL THE EMPLOYEE APART FROM THOSE WHO HAVE SALARY BETWEEN 30000 AND 45000

SELECT E_NAME, SALARY
FROM EMP1
WHERE SALARY < 30000 OR SALARY > 45000;

SELECT E_NAME, SALARY
FROM EMP1
WHERE SALARY NOT BETWEEN 30000 AND 45000;

-- DISPLAY EMP NAME, JOB AND JOINING DATE OF ALL EMP BETWEEN TWO DATES 

SELECT E_NAME, JOB, J_DATE
FROM EMP1
WHERE J_DATE BETWEEN '2010-01-01' AND '2020-01-01'
ORDER BY J_DATE;

-- SHOW ME THE NAME OF THE EMPLOYEE WHOSE NAME INCLUDE 'C' AS THIRD CHAR 

SELECT E_NAME
FROM EMP1
WHERE E_NAME LIKE '__C%';

-- DISPLAY OF NAME AND JDATE OF EMPLOYEE WHO HAVE JOINE AFTER A FEW DATE

SELECT E_NAME, J_DATE
FROM EMP1
WHERE J_DATE > '2010-11-21';

-- SHOW THE NAME AND J_DATE OF EMP WHO JOINED AFETR AJAY 
SELECT E_NAME, J_DATE
FROM EMP1
WHERE J_DATE > (SELECT J_DATE
FROM EMP1
WHERE E_NAME = 'LUY')
ORDER BY J_DATE;

-- SHOW THE DIFFERENCE BETWEEN HIGHEST SALARY AND LOWEST SALARY 
SELECT MAX(SALARY) - MIN(SALARY) AS DIFF
FROM EMP1;

-- SHOW ME THE NAMES OF EMPLOYEE WHO ARE WORKING IN THE SAME DEPT WHERE AJAY IS WORKING (INCLUDING AJAY)
SELECT E_NAME
FROM EMP1
WHERE D_ID = (SELECT D_ID
FROM EMP1
WHERE E_NAME = 'LUY');

-- SHOW ME THE NAMES OF EMPLOYEE WHO ARE WORKING IN THE SAME DEPT WHERE AJAY IS WORKING (EXCLUDING AJAY)
SELECT E_NAME
FROM EMP1
WHERE D_ID = (SELECT D_ID
    FROM EMP1
    WHERE E_NAME = 'LUY') AND E_NAME != 'LUY';
-- MINUS
-- SELECT E_NAME
-- FROM EMP1
-- WHERE E_NAME = 'LUY';

-- SHOW THE EMPID NAME AND SALARY OF ALL THE EMP WHO EARN MORE THAN AVG SALARY 
SELECT E_ID, E_NAME, SALARY
FROM EMP1
WHERE SALARY > (SELECT AVG(SALARY)
FROM EMP1);

-- HOW TO DELETE ONE OF THE TWO DUPLICATE ROW 
-- SYSTEM GIVES EVERY ROW A NEW ROW ID, TO IDENTIFY THE ROWS UNIQUELY 
-- SO WE HAVE TO CHECK ROW ID AND DELETE ONE OF THE DUPLICATES 


SELECT ROWID
FROM EMP1
WHERE E_ID = 2;


DELETE FROM EMP1 
WHERE ROWID NOT IN (SELECT MAX(ROWID)
FROM EMP
GROUP BY EMP_ID);

-- CREATE TABLE EMP2(E_NAME VARCHAR(21),CITY VARCHAR(21));
-- CREATE TABLE MANAGES(E_NAME VARCHAR(21),MGR_NAME VARCHAR(21));
-- CREATE TABLE WORKS_FOR(E_NAME VARCHAR(21),C_NAME VARCHAR(21),SALARY NUMERIC(10));
-- CREATE TABLE COMPANY(C_NAME VARCHAR(21),CITY VARCHAR(21));


-- fIND THE NAME AND CITY OF THE EMPLOYEE WHO WORK IN GOOGLE 
SELECT EMP2.E_NAME, CITY
FROM EMP2, WORKS_FOR
WHERE EMP2.E_NAME = WORKS_FOR.E_NAME AND C_NAME = 'GOOGLE';

-- SHOW THE NAME AND RESIDENTIAL DETAILS OF EMPLOYEE WHO WORKS FOR 
-- 'MICRO' AND WHOSE SALARY IS GREATER THAN 3500000;

SELECT EMP2.E_NAME, CITY
FROM EMP2, WORKS_FOR
WHERE EMP2.E_NAME = WORKS_FOR.E_NAME AND C_NAME = 'MICRO' AND SALARY > 3500000;

-- SHOW THE NAME OF THE EMPLOYEE WHO WORK IN THE SAME CITY IN WHICH 
-- THEY LIVE 
SELECT EMP2.E_NAME
FROM EMP2, WORKS_FOR, COMPANY
WHERE EMP2.E_NAME = WORKS_FOR.E_NAME AND COMPANY.C_NAME = WORKS_FOR.C_NAME AND COMPANY.CITY = EMP2.CITY;


-- SHOW THE NAME OF THE EMPLOYEES WHO ARE NOT WORKING FOR TCS 
SELECT EMP2.E_NAME
FROM EMP2, WORKS_FOR
WHERE EMP2.E_NAME = WORKS_FOR.E_NAME AND WORKS_FOR.C_NAME != 'GOOGLE';

-- SHOW THE TOTAL SALARY PAID BY EACH COMPANY
SELECT SUM(SALARY)
FROM WORKS_FOR
GROUP BY C_NAME;

-- SHOW THE NAME OF THE EMPLOYEE WHO EARN MORE THAN EVERY EMPLOYEE OF THE WIPRO 
SELECT E_NAME, SALARY
FROM WORKS_FOR
WHERE SALARY > (SELECT MAX(SALARY)
FROM WORKS_FOR
WHERE C_NAME = 'GOOGLE');

-- SHOW THE NAME OF THE EMPLOYEE WHO LIVE IN SAME CITY AS THEIR MANAGER
-- SELECT EMP2.E_NAME
-- FROM EMP2, MANAGES
-- WHERE EMP2.E_NAME = MANAGES.E_NAME AND EMP2.CITY ;

-- SHOW THE COMPANY NAME WHOSE EMPLOYEE EARN MORE SALARAY THAN AVG SALARY OF INFO 
SELECT C_NAME
FROM WORKS_FOR
GROUP BY C_NAME
HAVING AVG(SALARY) > (SELECT AVG(SALARY)
FROM WORKS_FOR
WHERE C_NAME = 'GOOGLE');

